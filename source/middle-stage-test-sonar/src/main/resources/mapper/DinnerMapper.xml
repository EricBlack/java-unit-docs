<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.middle.stage.test.optimization.dao.DinnerMapper">

    <resultMap id="BaseResultMap" type="com.middle.stage.test.optimization.dao.data.DinnerDO">
        <id column="dinner_id" property="dinnerId" jdbcType="INTEGER"/>
        <result column="dinner_type_id" property="dinnerTypeId" jdbcType="INTEGER"/>
        <result column="canteen_id" property="canteenId" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="INTEGER"/>
        <result column="end_time" property="endTime" jdbcType="INTEGER"/>
        <result column="delete_status" property="deleteStatus" jdbcType="TINYINT"/>
        <result column="create_user_name" property="createUserName" jdbcType="VARCHAR"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
        <result column="update_user_id" property="updateUserId" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        dinner_id, dinner_type_id, canteen_id, start_time, end_time, delete_status, create_user_name,
        create_user_id, create_time, update_user_name, update_user_id, update_time
    </sql>

    <sql id="Selective_Column_List">
        dinner_id, dinner_type_id, canteen_id, start_time, end_time, delete_status, create_user_name,
        create_user_id, create_time, update_user_name, update_user_id, update_time
    </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from mc_dinner
        where dinner_id = #{dinnerId,jdbcType=INTEGER}
    </select>
    <select id="selectByCanteenId" parameterType="java.lang.Integer"
            resultType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        select
        <include refid="Base_Column_List"/>
        from mc_dinner
        where canteen_id = #{canteenId,jdbcType=INTEGER} and delete_status = 1
    </select>
    <select id="selectListBySearch" resultType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        select
        <include refid="Base_Column_List"/>
        from mc_dinner
        <where>
            <if test="canteenId != null">
                and canteen_id = #{canteenId,jdbcType=INTEGER}
            </if>
            <if test="deleteStatus != null">
                and delete_status = #{deleteStatus,jdbcType=TINYINT}
            </if>
            <if test="excludeDinnerTypeId != null">
                and dinner_type_id != #{excludeDinnerTypeId,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mc_dinner
        where dinner_id = #{dinnerId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        insert into mc_dinner (dinner_id, dinner_type_id, canteen_id,
        start_time, end_time, delete_status,
        create_user_name, create_user_id, create_time,
        update_user_name, update_user_id, update_time
        )
        values (#{dinnerId,jdbcType=INTEGER}, #{dinnerTypeId,jdbcType=INTEGER}, #{canteenId,jdbcType=INTEGER},
        #{startTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}, #{deleteStatus,jdbcType=BIT},
        #{createUserName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateUserName,jdbcType=VARCHAR}, #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
        insert into mc_dinner (dinner_type_id, canteen_id,start_time, end_time, delete_status,create_user_name,
        create_user_id, create_time,update_user_name, update_user_id, update_time)
        values
        <foreach collection="list" item="tuple" index="index" separator=",">
            (
            #{tuple.dinnerTypeId},
            #{tuple.canteenId},
            #{tuple.startTime},
            #{tuple.endTime},
            #{tuple.deleteStatus},
            #{tuple.createUserName},
            #{tuple.createUserId},
            #{tuple.createTime},
            #{tuple.updateUserName},
            #{tuple.updateUserId},
            #{tuple.updateTime}
            )
        </foreach>
    </insert>

    <update id="batchDeleteByCondition" parameterType="java.util.List">
        <foreach collection="list" item="tuple" index="index" open="" close="" separator=";">
            UPDATE mc_dinner
            <set>
                delete_status = 0,
                update_user_id = #{tuple.updateUserId},
                update_user_name = #{tuple.updateUserName},
                update_time = SYSDATE()
            </set>
            <where>
                dinner_type_id = #{tuple.dinnerTypeId} and canteen_id = #{tuple.canteenId}
            </where>
        </foreach>
    </update>

    <update id="batchUpdateByCondition" parameterType="java.util.List">
        <foreach collection="list" item="tuple" index="index" open="" close="" separator=";">
            UPDATE mc_dinner
            <set>
                start_time = #{tuple.startTime},
                end_time = #{tuple.endTime},
                update_user_id = #{tuple.updateUserId},
                update_user_name = #{tuple.updateUserName},
                update_time = SYSDATE()
            </set>
            <where>
                dinner_type_id = #{tuple.dinnerTypeId} and canteen_id = #{tuple.canteenId}
            </where>
        </foreach>
    </update>

    <insert id="insertSelective" parameterType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        insert into mc_dinner
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dinnerId != null">
                dinner_id,
            </if>
            <if test="dinnerTypeId != null">
                dinner_type_id,
            </if>
            <if test="canteenId != null">
                canteen_id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="deleteStatus != null">
                delete_status,
            </if>
            <if test="createUserName != null">
                create_user_name,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUserName != null">
                update_user_name,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dinnerId != null">
                #{dinnerId,jdbcType=INTEGER},
            </if>
            <if test="dinnerTypeId != null">
                #{dinnerTypeId,jdbcType=INTEGER},
            </if>
            <if test="canteenId != null">
                #{canteenId,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=INTEGER},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=INTEGER},
            </if>
            <if test="deleteStatus != null">
                #{deleteStatus,jdbcType=BIT},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserName != null">
                #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        update mc_dinner
        <set>
            <if test="dinnerTypeId != null">
                dinner_type_id = #{dinnerTypeId,jdbcType=INTEGER},
            </if>
            <if test="canteenId != null">
                canteen_id = #{canteenId,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=INTEGER},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=INTEGER},
            </if>
            <if test="deleteStatus != null">
                delete_status = #{deleteStatus,jdbcType=BIT},
            </if>
            <if test="createUserName != null">
                create_user_name = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserName != null">
                update_user_name = #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where dinner_id = #{dinnerId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.middle.stage.test.optimization.dao.data.DinnerDO">
        update mc_dinner
        set dinner_type_id = #{dinnerTypeId,jdbcType=INTEGER},
        canteen_id = #{canteenId,jdbcType=INTEGER},
        start_time = #{startTime,jdbcType=INTEGER},
        end_time = #{endTime,jdbcType=INTEGER},
        delete_status = #{deleteStatus,jdbcType=BIT},
        create_user_name = #{createUserName,jdbcType=VARCHAR},
        create_user_id = #{createUserId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
        update_user_id = #{updateUserId,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where dinner_id = #{dinnerId,jdbcType=INTEGER}
    </update>
</mapper>